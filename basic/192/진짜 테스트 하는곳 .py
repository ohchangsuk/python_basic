# step7
# 카드게임
# 트럼프 카드종류 > 4타입, 타입별로 13장의 카드가 존재 
# a는 합산값의 *2을 한다: ex) A, # => (1+3)*2
# J > 11, Q > 12, K > -5
'''
♠ : A,2 ~ 10, j, q, k
♥ : A,2 ~ 10, j, q, k
♣ : A,2 ~ 10, j, q, k
◆ : A,2 ~ 10, j, q, k

'''
# 전체 룰 
#1. 게임이 시작하면 카드를 섞는다 > 셔플 > random 모듈을 활용 ( 외장함수, 구현을 위해서 사용)
#2. 카드를 순서대로 나한장(0), 컴퓨터 한장(1), 나한장(2), 커퓨터 한장(3) 배치를 한다(순서대로 뽑는다.)
#3. 플레이어는 최대 2장까지 더 받을수 있다.
    #다시 나 한장(4,6), 컴퓨터 한장(5,7) > 최대 2번까지 가능 
#4.승패 > 내가 가진 카드중 최대 값 2개를 합산해서, 특별 기능이 있다면 추가 계산해서 높은 쪽이 승리한다. 
#5. 한번에 이기면 (내카드의합- 컴퓨터 카드의합)*100, 카드를 한번 받으면 20 점씩 깐다.
#6. 카드를 받으면 카드를 더 받겠습니까? 아니면 승부를 내겠습니까?
#7. 다시 하시겠습니까? yes > 다시 1번부터 시작, no > game over !! 종료
import random
ori_data=[1,2,3,4,5]
Target_data = ori_data[:]

# 난 항상 일정하게 섞이는 값을 원한다> 난수가 항상 일정하게 나온다 > seed고정하면
random.seed(1) # 시드를 고정하면 난수가 나오는 순서가 동일 > 일정한 결과를 낼수 있다 .
# 일정한 결과를 내면 => 항상 같은 결과가 나오는 실험 환경을 구착할수 있다. 
#변수를 바꿔 가면서 영향성등등 분석할수 있다. 
# 씨드를 고정하지 않으면 > 현재 시간이 씨드가 된다.
random.shuffle(Target_data)#섞기 함수
print(ori_data)
print(Target_data)


tmp= [a+b for a in range(1,14) for b in ('♠','♥','♣','◆')]
#1. 게임이 시작하면 카드를 섞는다 > 셔플 > random 모듈을 활용 ( 외장함수, 구현을 위해서 사용)
